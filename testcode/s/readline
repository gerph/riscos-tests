
        AREA    |Test$$Code|, CODE

        GET     hdr.swis
        GET     hdr.macros
        GET     hdr.printmacros

buffer_size * 16

read_line      ROUT
        Push    "lr"
        MOV     r8, r1

; default parameters
        MOV     r1, #buffer_size
        MOV     r2, #' '
        MOV     r3, #256

10
        ADR     lr, %BT10
        LDRB    r0, [r8], #1
        TEQ     r0, #'b'
        BEQ     set_buffer_size
        CMP     r0, #32
        BLO     %FT90

80
        PrintLine "Syntax: readline b[l0-9]"
        PrintLine "Options:"
        PrintLine "    b    - set buffer size; long, #-bytes"
        B       %FT99

90
        BL      do_readline

99
        Pull    "pc"


set_buffer_size SIGNATURE
        Push    "lr"
        LDRB    r0, [r8], #1
        TEQ     r0, #'l'
        MOVEQ   r1, #1<<28

        SUB     r14, r0, #'0'
        CMP     r14, #10
        MOVLT   r1, r14

        Pull    "pc"



do_readline SIGNATURE

        SWI     OS_WriteS
        = "Input: ",0
        ALIGN

        ADR     r0, buffer
        SWI     OS_ReadLine

        MOVCS   r4, #1              ; Escape pressed
        MOVCC   r4, #0

        ADR     r0, buffer
        LDRB    r3, [r0, r1]        ; preserve the terminating character
        MOV     r2, #0
        STRB    r2, [r0, r1]

        ADR     r0, message
        SWI     OS_Write0

        ADR     r0, buffer
        SWI     OS_Write0

        ADR     r0, end
        SWI     OS_Write0

        CMP     r3, #32
        BGE     %FT20
        SWI     OS_WriteI + '^'
        ADD     r3, r3, #64

20
        MOV     r0, r3
        SWI     OS_WriteC

        SWI     OS_NewLine

        TEQ     r4, #1
        BNE     %FT90
        ADR     r0, escape
        SWI     OS_Write0
        SWI     OS_NewLine

90
        MOV     pc, lr

message
        = "You said: <", 0
end
        = "> terminating char: ", 0

escape
        = "Escape" ,0

buffer
        %       buffer_size

        END
